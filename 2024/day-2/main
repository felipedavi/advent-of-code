#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""Advent of Code 2022
   Day 2
   Red-Nosed Reports
"""

import sys,os

def part_one(lines):
    map = split_lines(lines)
    map = map_line(map)
    saved_reports = 0

    for sm in map:
        is_valid=True
        is_increasing=None
        for l in range(len(sm)-1):
            level=sm[l+1]-sm[l]
            if level>0:
                if is_increasing is None:
                    is_increasing = True
                elif is_increasing is False:
                    is_increasing = None
                    is_valid=False
                    break
            elif level<0:
                if is_increasing is None:
                    is_increasing = False
                if is_increasing:
                    is_increasing = None
                    is_valid=False
                    break
            if not (1 <= abs(level) <= 3):
                is_valid = False            
        if(is_valid):
            saved_reports+=1
    print(f"{saved_reports} Reports Safe")

def day(file):
    print("Advent of Code 2024 - Day 2")
    lines = read_file(file)
    part_one(lines)

def map_line(lst):
    l=[]
    for sl in lst:
        slint = list(map(int, sl))
        l.append(slint)
    return l

def split_lines(lines):
    map=[]
    for line in lines:
        map.append(line.split())
    return map

def print_lines(lines):
    if lines is None:
        return
    for l in lines:
        print(f"{l} {type(l)}")

def read_file(file):
    if not os.path.exists(file):
        print(f"Error: File '{file}' not found.")
        return None
    try:
        with open(file, 'r') as f:
            return f.read().splitlines()
    except IOError:
        print(f"Error: Could not open file '{file}'.")

        return None

def show_usage():
    print(f"Usage: ./main <arg>\n")
    print(f"e\tExample")
    print(f"s\tSolution")
    print("\nExample for solution mode use ./main s")

def handle_argument(arg):
    file_path=''
    if arg == 's':
        file_path = "input.txt"
    elif arg == 'e' or not arg:
        file_path = "example.txt"
    else:
        print(f"Error: Incorrect argument.\n")
        show_usage()
        sys.exit(1)
    day(file_path)

def check_arguments():
    if len(sys.argv) > 2:
        print(f"Error: Too many arguments supplied.\n")
        show_usage()
        sys.exit(1)
    
    return sys.argv[1] if len(sys.argv) == 2 else ''

def main():
    arg = check_arguments()
    handle_argument(arg)

if __name__ == "__main__":
    main()
